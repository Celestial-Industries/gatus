name: build and push image

on:
  push:
    branches: 
      - main
      - feature/migrate-from-dockerhub-to-gh-registry
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  container_build_and_push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup AGE key for decryption for SOPS
        id: setup-age-key
        run: |
          echo "${{ secrets.AGE_KEY }}" >  keys.txt
          echo "SOPS_AGE_KEY_FILE=$(pwd)/keys.txt" >> $GITHUB_ENV

      - name: Get SOPS latest semantic version
        id: get-sops-version
        run: |
          SOPS_VERSION=$(curl -s https://api.github.com/repos/getsops/sops/releases/latest | grep -oP '"tag_name": "\K[^"]+' | sed 's/^v//')
          echo "SOPS_VERSION=$SOPS_VERSION" >> $GITHUB_ENV
          echo $SOPS_VERSION

      - name: Install SOPS from deb package
        id: install-sops
        run: |
          echo $SOPS_VERSION
          URL="https://github.com/getsops/sops/releases/download/v${SOPS_VERSION}/sops_${SOPS_VERSION}_amd64.deb"
          wget $URL -O sops.deb
          sudo dpkg -i sops.deb

      - name: SOPS decrypt yaml config
        id: sops-decrypt-config-yaml
        run: |
          sops --decrypt --age $(cat $SOPS_AGE_KEY_FILE | grep -oP "public key: \K(.*)") ./config.enc.yaml > config.yaml 

      - name: Set up QEMU
        id: set_up_qemu
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        id: set_up_docker_buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Login to GHCR
        id: login_to_ghcr
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase GH org name
        run: |
            echo "ORG=${GITHUB_REPOSITORY@L}" >> "${GITHUB_ENV}"

      - name: Build and push
        id: build_and_publish
        uses: docker/build-push-action@v6.14.0
        with:
          context: .
          platforms: linux/amd64,linux/arm,linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.ORG }}/gatus:latest

      - uses: act10ns/slack@v2.1.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
